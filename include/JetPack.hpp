//
// Created by Enzo Renard on 26/12/2024.
//
/**
 * @file JetPack.hpp
 * @brief Defines the JetPack class, representing a character's jetpack capability in the game.
 *
 * The JetPack class manages the activation, cooldown, and usage of a jetpack, including
 * configurable force, duration, and landing animation time.
 */
#ifndef JETPACK_HPP
#define JETPACK_HPP
#include <chrono>

/**
 * @class JetPack
 * @brief Represents a jetpack, allowing a character to fly for a limited time with specified constraints.
 */
class JetPack {
    double force; ///< The force generated by the jetpack during activation.
    double maxTime; ///< The maximum duration the jetpack can be used continuously.
    double cooldown; ///< The cooldown time required before the jetpack can be used again.
    double landingAnimationTime; ///< The duration of the landing animation after jetpack usage.
    std::chrono::time_point<std::chrono::steady_clock> lastJetpackUse; ///< The last time the jetpack was activated.

public:
    static constexpr double DEF_FORCE = 5.0; ///< Default force generated by the jetpack.
    static constexpr double DEF_TIME = 5.0; ///< Default maximum usage time of the jetpack.
    static constexpr double DEF_COOLDOWN = 15.0; ///< Default cooldown time for the jetpack.
    static constexpr double DEF_LANDING_ANIMATION_TIME = 0.2; ///< Default landing animation time.

    /**
     * @brief Constructs a JetPack object with specified parameters.
     * @param force The force generated by the jetpack.
     * @param maxTime The maximum duration of continuous jetpack usage.
     * @param cooldown The cooldown time required before reusing the jetpack.
     * @param landingAnimationTime The duration of the landing animation after jetpack usage.
     */
    JetPack(double force, double maxTime, double cooldown, double landingAnimationTime);

    /**
     * @brief Activates the jetpack, marking it as in use.
     * @throws std::runtime_error If the jetpack cannot be activated due to cooldown or other constraints.
     */
    void activate();

    /**
     * @brief Checks if the jetpack can be activated after considering cooldown and other constraints.
     * @return True if the jetpack can be activated, otherwise false.
     */
    bool canActivate() const;

    /**
     * @brief Checks if the jetpack is currently in use.
     * @return True if the jetpack is being used, otherwise false.
     */
    bool isUsing() const;

    /**
     * @brief Retrieves the force generated by the jetpack.
     * @return The force as a double.
     */
    double getForce() const;

    /**
     * @brief Retrieves the landing animation time of the jetpack.
     * @return The landing animation time as a double.
     */
    double getLandAnimationTime() const;

    /**
     * @brief Retrieves the maximum usage time of the jetpack.
     * @return The maximum time as a double.
     */
    double getMaxTime() const;
};
#endif //JETPACK_HPP
